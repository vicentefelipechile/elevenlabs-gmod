--[[----------------------------------------------------------------------------
                            Elevenlabs Shared Script
----------------------------------------------------------------------------]]--

Elevenlabs.Config = {}

--[[------------------------
      Shared Definitions
------------------------]]--

Elevenlabs.Config.enabled = CreateConVar("elevenlabs_enabled", 1, {FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_ARCHIVE}, "Toggle the elevenlabs module", 0, 1)
Elevenlabs.Config.volume = CreateConVar("elevenlabs_volume", 1, {FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_ARCHIVE}, "Volume of the voice from elevenlabs module", 0, 5)
Elevenlabs.Config.display = CreateConVar("elevenlabs_noshow", 1, {FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_ARCHIVE}, "Should show the command in the chat?", 0, 1)
Elevenlabs.Config.maxtext = CreateConVar("elevenlabs_maxtext", 40, {FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_ARCHIVE}, "What is the max amount of character to sent to Elevenlabs?", 10, 400)


--[[------------------------
          Functions
------------------------]]--

function Elevenlabs.SetFileName(name)
    local unixtime = os.time()
    local name = string.lower( name:gsub("[%p%c]", ""):gsub("%s+", "_") )

    if not file.Exists("elevenlabs", "DATA") then
        file.CreateDir("elevenlabs")
    end

    local format = "elevenlabs/%s_%s.mp3"
    
    return string.format(format, unixtime, name)
end

-- Obviusly this was generated by AI
function Elevenlabs.SanitizeString(inputString)
    local sanitizedString = ""

    local maliciousCharacters = {
        [";"] = "_",
        [","] = "_",
        ["|"] = "_",
        ["&"] = "_",
        ["$"] = "_",
        ["%"] = "_",
        ["<"] = "_",
        [">"] = "_",
        ['"'] = "_",
        ["'"] = "_",
        ["("] = "_",
        [")"] = "_",
        ["["] = "_",
        ["]"] = "_",
        ["{"] = "_",
        ["}"] = "_",
        ["`"] = "_",
        ["~"] = "_",
        ["\\"] = "_",
        ["/"] = "_",
        ["!"] = "_",
        ["?"] = "_",
        ["="] = "_",
        ["+"] = "_",
        ["-"] = "_",
        ["*"] = "_",
        ["#"] = "_",
        ["@"] = "_",
        ["^"] = "_"
    }

    for i = 1, #inputString do
        local char = inputString:sub(i, i)
        local sanitizedChar = maliciousCharacters[char]
        if sanitizedChar then
            sanitizedString = sanitizedString .. sanitizedChar
        else
            sanitizedString = sanitizedString .. char
        end
    end

    return sanitizedString
end
